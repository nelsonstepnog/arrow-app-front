{"ast":null,"code":"import SockJS from'sockjs-client';import{Stomp}from'@stomp/stompjs';var stompClient=null;var handlers=[];export function connectTo(){var socket=new SockJS('/gs-guide-websocket');stompClient=Stomp.over(socket);stompClient.connect({},function(frame){console.log('Connected: '+frame);stompClient.subscribe('/topic/users',function(users){handlers.forEach(function(handler){return handler(JSON.parse(users.body));});});});}export function disconnect(){if(stompClient!==null){stompClient.disconnect();}console.log(\"Disconnected\");}export function sendUsers(users){stompClient.send(\"http://localhost:8080/changeUsers\",{},JSON.stringify(users));}","map":{"version":3,"sources":["/home/nells/study/arrow-app-front/src/ws/ws.js"],"names":["SockJS","Stomp","stompClient","handlers","connectTo","socket","over","connect","frame","console","log","subscribe","users","forEach","handler","JSON","parse","body","disconnect","sendUsers","send","stringify"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,eAAnB,CACA,OAAQC,KAAR,KAAoB,gBAApB,CAGA,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB,CAEA,MAAO,SAASC,CAAAA,SAAT,EAAqB,CACxB,GAAMC,CAAAA,MAAM,CAAG,GAAIL,CAAAA,MAAJ,CAAW,qBAAX,CAAf,CACAE,WAAW,CAAGD,KAAK,CAACK,IAAN,CAAWD,MAAX,CAAd,CACAH,WAAW,CAACK,OAAZ,CAAoB,EAApB,CAAwB,SAAAC,KAAK,CAAI,CAC7BC,OAAO,CAACC,GAAR,CAAY,cAAgBF,KAA5B,EACAN,WAAW,CAACS,SAAZ,CAAsB,cAAtB,CAAsC,SAAAC,KAAK,CAAI,CAC3CT,QAAQ,CAACU,OAAT,CAAiB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,IAAjB,CAAD,CAAX,EAAxB,EACH,CAFD,EAGH,CALD,EAMH,CAED,MAAO,SAASC,CAAAA,UAAT,EAAsB,CACzB,GAAIhB,WAAW,GAAK,IAApB,CAA0B,CACtBA,WAAW,CAACgB,UAAZ,GACH,CACDT,OAAO,CAACC,GAAR,CAAY,cAAZ,EACH,CAED,MAAO,SAASS,CAAAA,SAAT,CAAmBP,KAAnB,CAA0B,CAC7BV,WAAW,CAACkB,IAAZ,CAAiB,mCAAjB,CAAsD,EAAtD,CAA0DL,IAAI,CAACM,SAAL,CAAeT,KAAf,CAA1D,EACH","sourcesContent":["import SockJS from 'sockjs-client'\nimport {Stomp} from '@stomp/stompjs'\n\n\nlet stompClient = null;\nconst handlers = [];\n\nexport function connectTo() {\n    const socket = new SockJS('/gs-guide-websocket');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, frame => {\n        console.log('Connected: ' + frame);\n        stompClient.subscribe('/topic/users', users => {\n            handlers.forEach(handler => handler(JSON.parse(users.body)))\n        });\n    });\n}\n\nexport function disconnect() {\n    if (stompClient !== null) {\n        stompClient.disconnect();\n    }\n    console.log(\"Disconnected\");\n}\n\nexport function sendUsers(users) {\n    stompClient.send(\"http://localhost:8080/changeUsers\", {}, JSON.stringify(users));\n}"]},"metadata":{},"sourceType":"module"}