{"ast":null,"code":"var _jsxFileName = \"/home/nells/study/arrow-app-front/src/containers/App.js\";\nimport React from 'react';\nimport '../containers/App.css';\nimport { connect } from \"react-redux\";\nimport { usersFetchData } from \"../actions/users.js\";\nimport UsersListTable from \"../UsersListTable\";\nimport UsersCreateForm from \"../UsersCreateForm\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchData(\"http://localhost:8080/users\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(UsersListTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"create-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(UsersCreateForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  };\n};\n\nfunction shouldComponentUpdate(nextProps, mapStateToProps) {\n  return this.props.users === nextProps.users; // use === to compare types too!\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: url => dispatch(usersFetchData(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/nells/study/arrow-app-front/src/containers/App.js"],"names":["React","connect","usersFetchData","UsersListTable","UsersCreateForm","App","Component","componentDidMount","props","fetchData","render","mapStateToProps","state","users","shouldComponentUpdate","nextProps","mapDispatchToProps","dispatch","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAC9BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,SAAX,CAAqB,6BAArB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ;AAUH;;AAhB6B;;AAmBlC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADV,GAAP;AAGH,CAJD;;AAMA,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CJ,eAA1C,EAA2D;AACvD,SAAO,KAAKH,KAAL,CAAWK,KAAX,KAAqBE,SAAS,CAACF,KAAtC,CADuD,CACV;AAChD;;AAED,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHR,IAAAA,SAAS,EAAES,GAAG,IAAID,QAAQ,CAACf,cAAc,CAACgB,GAAD,CAAf;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAACU,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CX,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport '../containers/App.css';\nimport {connect} from \"react-redux\"\nimport {usersFetchData} from \"../actions/users.js\";\nimport UsersListTable from \"../UsersListTable\";\nimport UsersCreateForm from \"../UsersCreateForm\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.fetchData(\"http://localhost:8080/users\");\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"list-users\">\n                    <UsersListTable/>\n                </div>\n                <div className=\"create-user\">\n                    <UsersCreateForm/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users\n    };\n};\n\nfunction shouldComponentUpdate(nextProps, mapStateToProps) {\n    return this.props.users === nextProps.users; // use === to compare types too!\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: url => dispatch(usersFetchData(url))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}