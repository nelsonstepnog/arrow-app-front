{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { BlockStatement as users } from \"@babel/types\";\nlet stompClient = null;\nconst handlers = [];\nexport function connectTo() {\n  const socket = new SockJS('/gs-guide-websocket');\n  stompClient = Stomp.over(socket);\n  stompClient.connect({}, frame => {\n    console.log('Connected: ' + frame);\n    stompClient.subscribe('/topic/users', user => {\n      handlers.forEach(handler => handler(JSON.parse(users.body)));\n    });\n  });\n}\nexport function disconnect() {\n  if (stompClient !== null) {\n    stompClient.disconnect();\n  }\n\n  console.log(\"Disconnected\");\n}\nexport function sendUsers(users) {\n  stompClient.send(\"/app/changeUsers\", {}, JSON.stringify(users));\n}","map":{"version":3,"sources":["/home/nells/study/arrow-app-front/src/ws/ws.js"],"names":["SockJS","Stomp","BlockStatement","users","stompClient","handlers","connectTo","socket","over","connect","frame","console","log","subscribe","user","forEach","handler","JSON","parse","body","disconnect","sendUsers","send","stringify"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,cAAc,IAAIC,KAA1B,QAAsC,cAAtC;AAGA,IAAIC,WAAW,GAAG,IAAlB;AACA,MAAMC,QAAQ,GAAG,EAAjB;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAMC,MAAM,GAAG,IAAIP,MAAJ,CAAW,qBAAX,CAAf;AACAI,EAAAA,WAAW,GAAGH,KAAK,CAACO,IAAN,CAAWD,MAAX,CAAd;AACAH,EAAAA,WAAW,CAACK,OAAZ,CAAoB,EAApB,EAAwBC,KAAK,IAAI;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,KAA5B;AACAN,IAAAA,WAAW,CAACS,SAAZ,CAAsB,cAAtB,EAAsCC,IAAI,IAAI;AAC1CT,MAAAA,QAAQ,CAACU,OAAT,CAAiBC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWf,KAAK,CAACgB,IAAjB,CAAD,CAAnC;AACH,KAFD;AAGH,GALD;AAMH;AAED,OAAO,SAASC,UAAT,GAAsB;AACzB,MAAIhB,WAAW,KAAK,IAApB,EAA0B;AACtBA,IAAAA,WAAW,CAACgB,UAAZ;AACH;;AACDT,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AAED,OAAO,SAASS,SAAT,CAAmBlB,KAAnB,EAA0B;AAC7BC,EAAAA,WAAW,CAACkB,IAAZ,CAAiB,kBAAjB,EAAqC,EAArC,EAAyCL,IAAI,CAACM,SAAL,CAAepB,KAAf,CAAzC;AACH","sourcesContent":["import SockJS from 'sockjs-client'\nimport {Stomp} from '@stomp/stompjs'\nimport {BlockStatement as users} from \"@babel/types\";\n\n\nlet stompClient = null;\nconst handlers = []\n\nexport function connectTo() {\n    const socket = new SockJS('/gs-guide-websocket');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, frame => {\n        console.log('Connected: ' + frame);\n        stompClient.subscribe('/topic/users', user => {\n            handlers.forEach(handler => handler(JSON.parse(users.body)))\n        });\n    });\n}\n\nexport function disconnect() {\n    if (stompClient !== null) {\n        stompClient.disconnect();\n    }\n    console.log(\"Disconnected\");\n}\n\nexport function sendUsers(users) {\n    stompClient.send(\"/app/changeUsers\", {}, JSON.stringify(users));\n}"]},"metadata":{},"sourceType":"module"}