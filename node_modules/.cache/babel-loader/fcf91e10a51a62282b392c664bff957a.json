{"ast":null,"code":"var _jsxFileName = \"/home/nells/study/arrow-app-front/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/containers/App.js';\nimport * as serviceWorker from '../src/serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})), document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept('../src/containers/App.js', () => {\n    ReactDOM.render(React.createElement(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), document.getElementById('root'));\n  });\n}\n\nexports.handler = function (event, context, callback) {\n  callback(null, {\n    statusCode: 200,\n    headers: {\n      \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\"\n    },\n    body: JSON.stringify({})\n  }).then(result => console.log(result));\n}; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/nells/study/arrow-app-front/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","applyMiddleware","thunk","rootReducer","composeWithDevTools","store","render","document","getElementById","module","hot","accept","exports","handler","event","context","callback","statusCode","headers","body","JSON","stringify","then","result","console","log","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AAEA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,MAAMC,KAAK,GAAGL,WAAW,CACrBG,WADqB,EAErBC,mBAAmB,CAACH,eAAe,CAACC,KAAD,CAAhB,CAFE,CAAzB;AAKAN,QAAQ,CAACU,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAIIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ;;AAOA,IAAIC,MAAM,CAACC,GAAX,EAAgB;AACZD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,0BAAlB,EAA8C,MAAM;AAChDf,IAAAA,QAAQ,CAACU,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,EAAwBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAxB;AACH,GAFD;AAGH;;AAEDI,OAAO,CAACC,OAAR,GAAkB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmC;AAEjDA,EAAAA,QAAQ,CAAC,IAAD,EAAO;AACXC,IAAAA,UAAU,EAAE,GADD;AAEXC,IAAAA,OAAO,EAAE;AACL,qCAA+B,uBAD1B;AAEL,sCAAgC,cAF3B;AAGL,sCAAgC;AAH3B,KAFE;AAOXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAPK,GAAP,CAAR,CASEC,IATF,CASOC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CATjB;AAUH,CAZD,C,CAeA;AACA;AACA;;;AACAzB,aAAa,CAAC4B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/containers/App.js';\nimport * as serviceWorker from '../src/serviceWorker';\n\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (module.hot) {\n    module.hot.accept('../src/containers/App.js', () => {\n        ReactDOM.render(<App/>, document.getElementById('root'));\n    });\n}\n\nexports.handler = function(event, context, callback) {\n\n    callback(null, {\n        statusCode: 200,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n            \"Access-Control-Allow-Headers\": \"Content-Type\",\n            \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\"\n        },\n        body: JSON.stringify({})\n        }\n    ).then(result => console.log(result))\n};\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}